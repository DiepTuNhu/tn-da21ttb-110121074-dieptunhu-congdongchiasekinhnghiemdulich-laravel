@extends('user.master')
@section('content')
  <header class="explore-header">
    <h1>ƒêƒÉng b√†i m·ªõi</h1>
    <p>ƒêƒÉng nh·ªØng b√†i chia s·∫ª v·ªÅ ƒë·ªãa ƒëi·ªÉm du l·ªãch kh√°c nhau tr√™n kh·∫Øp Vi·ªát Nam!</p>
  </header>
<div class="container-post-share" style="max-width: 600px; margin: 40px auto;">
    {{-- <h2>ƒêƒÉng b√†i chia s·∫ª m·ªõi</h2> --}}
    <div class="form-group">
        <label>B·∫°n mu·ªën chia s·∫ª v·ªÅ:</label>
        <select id="shareType" class="form-control" required>
            <option value="">-- Ch·ªçn --</option>
            <option value="location">üìç M·ªôt ƒë·ªãa ƒëi·ªÉm du l·ªãch</option>
            <option value="facility">üß≠ M·ªôt ti·ªán √≠ch t·∫°i ƒë·ªãa ƒëi·ªÉm</option>
        </select>
    </div>

    <!-- Thay th·∫ø c√°c div .form-group ch·ªçn t·ªânh/th√†nh, ƒë·ªãa ƒëi·ªÉm, lo·∫°i ti·ªán √≠ch, ti·ªán √≠ch b·∫±ng ƒëo·∫°n n√†y -->
<div class="post-share-select-group">
    {{-- ƒê·ªãa ƒëi·ªÉm --}}
    <div id="locationSection" style="display:none;">
        <div class="select-row">
            <div class="form-group">
                <label for="provinceSelect">T·ªânh/Th√†nh</label>
                <select id="provinceSelect" class="form-control"></select>
            </div>
            <div class="form-group">
                <label for="destinationSelect">ƒê·ªãa ƒëi·ªÉm</label>
                <select id="destinationSelect" class="form-control"></select>
            </div>
        </div>
<a href="{{ route('user.destination.create') }}" class="text-primary">+ ƒê·ªãa ƒëi·ªÉm b·∫°n c·∫ßn ch∆∞a c√≥? T·∫°o m·ªõi</a>
        <br>
        <button id="goToPostLocation" class="btn btn-primary mt-3" disabled>Ti·∫øp t·ª•c</button>
    </div>

    {{-- Ti·ªán √≠ch --}}
    <div id="facilitySection" style="display:none;">
        <div class="select-row">
            <div class="form-group">
                <label for="provinceSelect2">T·ªânh/Th√†nh</label>
                <select id="provinceSelect2" class="form-control"></select>
            </div>
            <div class="form-group">
                <label for="destinationSelect2">ƒê·ªãa ƒëi·ªÉm</label>
                <select id="destinationSelect2" class="form-control"></select>
            </div>
<a href="{{ route('user.destination.create') }}" class="text-primary">+ ƒê·ªãa ƒëi·ªÉm b·∫°n c·∫ßn ch∆∞a c√≥? T·∫°o m·ªõi</a>

        </div>
        <div class="select-row" id="utilityOptionsRow" style="margin-top: 10px; display: none;">
            <div class="form-group" style="min-width:180px;">
                <label for="utilityTypeSelect">Lo·∫°i ti·ªán √≠ch</label>
                <select id="utilityTypeSelect" class="form-control">
                    <option value="">Ch·ªçn lo·∫°i ti·ªán √≠ch</option>
                    @foreach($utilityTypes as $type)
                        <option value="{{ $type->id }}">{{ $type->name }}</option>
                    @endforeach
                </select>
            </div>
            <div class="form-group" style="min-width:180px;">
                <label for="utilitySelect">Ti·ªán √≠ch</label>
                <select id="utilitySelect" class="form-control"></select>
            </div>
        </div>
        <a href="" class="text-primary" id="createUtilityLink" style="display:none;">+ Ti·ªán √≠ch b·∫°n mu·ªën chia s·∫ª ch∆∞a c√≥? T·∫°o m·ªõi</a>
        <br>
        <button id="goToPostFacility" class="btn btn-primary mt-3" disabled>Ti·∫øp t·ª•c</button>
    </div>
</div>
</div>
<div id="destinationCards" class="row mt-4"></div>
<div id="facilityDestinationCards" class="row mt-4"></div>
<div id="destinationPagination" class="mt-3"></div>
<div id="facilityDestinationPagination" class="mt-3"></div>
<div id="utilityCards" class="row mt-4"></div>
<!-- ƒê√öNG TH·ª® T·ª∞: jQuery tr∆∞·ªõc, select2 sau -->
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script>
$(document).ready(function() {
    // ·∫®n c√°c ph·∫ßn khi m·ªõi v√†o
    $('#destinationCards').hide();
    $('#locationSection').hide();
    $('#facilitySection').hide();

    // L·∫•y danh s√°ch t·ªânh t·ª´ API
    $.get('https://provinces.open-api.vn/api/?depth=1', function(data) {
        let html = '<option value="">Ch·ªçn t·ªânh/th√†nh</option>';
        data.forEach(function(province) {
            html += `<option value="${province.name}">${province.name}</option>`;
        });
        $('#provinceSelect, #provinceSelect2').html(html);
    });

    // Khi ch·ªçn lo·∫°i chia s·∫ª
    $('#shareType').on('change', function() {
        let type = $(this).val();
        $('#locationSection').toggle(type === 'location');
        $('#facilitySection').toggle(type === 'facility');
        if(type === 'location') {
            $('#destinationCards').show();
            $('#facilityDestinationCards').hide().html('');
            $('#destinationPagination').show();
            $('#facilityDestinationPagination').hide().html('');
            renderDestinationCards();
            loadAllDestinationsForDropdown($('#provinceSelect').val());
        } else if(type === 'facility') {
            $('#destinationCards').hide().html('');
            $('#facilityDestinationCards').show();
            $('#destinationPagination').hide().html('');
            $('#facilityDestinationPagination').show();
            renderFacilityDestinationCards();
            loadAllDestinationsForDropdown2($('#provinceSelect2').val());
            $('#utilityTypeSection').hide();
            $('#destinationSelect2').val('').trigger('change');
        } else {
            $('#destinationCards').hide().html('');
            $('#facilityDestinationCards').hide().html('');
            $('#destinationPagination').hide().html('');
            $('#facilityDestinationPagination').hide().html('');
            $('#utilityTypeSection').hide();
        }
    });

    // Khi ch·ªçn t·ªânh ·ªü ph·∫ßn ti·ªán √≠ch
    $('#provinceSelect2').on('change', function() {
        let province = $(this).val();
        renderFacilityDestinationCards(province);
        loadAllDestinationsForDropdown2(province);
        $('#utilityTypeSection').hide();
        $('#utilityCards').hide().html('');
        $('#facilityDestinationCards').show();
        $('#destinationSelect2').val('').trigger('change');
        $('#facilityDestinationPagination').show();
        $('#destinationPagination').hide();
    });

    // Khi ch·ªçn t·ªânh, l·ªçc l·∫°i card v√† c·∫≠p nh·∫≠t dropdown
    $('#provinceSelect').on('change', function() {
        let province = $(this).val();
        renderDestinationCards(province);
        loadAllDestinationsForDropdown(province); // <-- lu√¥n g·ªçi h√†m n√†y
    });

    // H√†m render th·∫ª ƒë·ªãa ƒëi·ªÉm
    let currentPage = 1;

    window.renderDestinationCards = function(province = '', page = 1, q = '', updateDropdown = true) {
        $.ajax({
            url: '{{ route('ajax.post_share_destinations') }}',
            data: { province: province, page: page, q: q },
            success: function(res) {
                let html = '';
                let results = res.results || [];
                let viewed = JSON.parse(localStorage.getItem('viewed_destinations') || '[]').map(Number);
                results.sort(function(a, b) {
                    let ia = viewed.indexOf(Number(a.id));
                    let ib = viewed.indexOf(Number(b.id));
                    if (ia === -1 && ib === -1) return 0;
                    if (ia === -1) return 1;
                    if (ib === -1) return -1;
                    return ia - ib;
                });
                if (results.length === 0) {
                    html = '<div class="destination-card"><p>Kh√¥ng c√≥ ƒë·ªãa ƒëi·ªÉm n√†o.</p></div>';
                } else {
                    results.forEach(function(item) {
                        html += `
                        <div class="destination-card" data-id="${item.id}">
                            <div class="card shadow-sm h-100">
                                <img src="${item.image}" class="card-img-top" alt="${item.text}">
                                <div class="card-body">
                                    <h5 class="card-title">${item.text}</h5>
                                </div>
                            </div>
                        </div>`;
                    });
                }
                $('#destinationCards').html(html);
                renderPagination(res.current_page, res.last_page, province);

                // CH·ªà c·∫≠p nh·∫≠t dropdown n·∫øu kh√¥ng ph·∫£i ƒëang t√¨m ki·∫øm
                if (updateDropdown) {
                    let selectHtml = '<option value="">T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm</option>';
                    results.forEach(function(item) {
                        selectHtml += `<option value="${item.id}">${item.text}</option>`;
                    });
                    $('#destinationSelect').html(selectHtml);
                    $('#destinationSelect').select2({
                        width: '100%',
                        placeholder: 'T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm'
                    });
                }
            }
        });
    }

    function renderPagination(current, last, province) {
        let html = '';
        if (last > 1) {
            html += `<nav class="pagination-nav"><ul class="pagination">`;
            for (let i = 1; i <= last; i++) {
                html += `<li class="page-item${i === current ? ' active' : ''}">
                            <a href="#" class="page-link" data-page="${i}" data-province="${province}">${i}</a>
                        </li>`;
            }
            html += `</ul></nav>`;
        }
        $('#destinationPagination').html(html);

        // G√°n s·ª± ki·ªán click
        $('.page-link').off('click').on('click', function(e) {
            e.preventDefault();
            let page = $(this).data('page');
            let province = $(this).data('province');
            renderDestinationCards(province, page);
        });
    }

    // Khi ng∆∞·ªùi d√πng xem chi ti·∫øt ƒë·ªãa ƒëi·ªÉm, v√≠ d·ª• id = 123
    window.markDestinationAsViewed = function(id) {
    id = Number(id);
    let viewed = JSON.parse(localStorage.getItem('viewed_destinations') || '[]').map(Number);
    if (!viewed.includes(id)) {
        viewed.unshift(id);
        if (viewed.length > 20) viewed = viewed.slice(0, 20);
        localStorage.setItem('viewed_destinations', JSON.stringify(viewed));
    }
}

$('#destinationSelect').select2({
    width: '100%',
    placeholder: 'T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm'
});

$('#destinationSelect').on('select2:open', function() {
    setTimeout(function() {
        document.querySelector('.select2-container--open .select2-search__field').focus();
    }, 0);

    // L·∫Øng nghe s·ª± ki·ªán nh·∫≠p t·ª´ kh√≥a
    $('.select2-search__field').off('input').on('input', function() {
        let keyword = $(this).val();
        let province = $('#provinceSelect').val();
        // CH·ªà render card, KH√îNG c·∫≠p nh·∫≠t l·∫°i dropdown!
        renderDestinationCards(province, 1, keyword, false);
    });
});

$('#destinationSelect2').select2({
    width: '100%',
    placeholder: 'T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm'
});

$('#destinationSelect2').on('select2:open', function() {
    setTimeout(function() {
        document.querySelector('.select2-container--open .select2-search__field').focus();
    }, 0);

    // L·∫Øng nghe s·ª± ki·ªán nh·∫≠p t·ª´ kh√≥a
    $('.select2-search__field').off('input.facility').on('input.facility', function() {
        let keyword = $(this).val();
        let province = $('#provinceSelect2').val();
        // Ch·ªâ render card, kh√¥ng c·∫≠p nh·∫≠t l·∫°i dropdown!
        renderFacilityDestinationCards(province, 1, keyword);
    });
});

    // H√†m l·∫•y to√†n b·ªô ƒë·ªãa ƒëi·ªÉm cho dropdown (kh√¥ng ph√¢n trang)
    function loadAllDestinationsForDropdown(province = '') {
        $.ajax({
            url: '{{ route('ajax.post_share_destinations') }}',
            data: { province: province, all: 1 },
            success: function(res) {
                let selectHtml = '<option value="">T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm</option>';
                (res.all_results || []).forEach(function(item) {
                    selectHtml += `<option value="${item.id}">${item.text}</option>`;
                });
                $('#destinationSelect').html(selectHtml);
                $('#destinationSelect').select2({
                    width: '100%',
                    placeholder: 'T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm'
                });
            }
        });
    }

// H√†m l·∫•y to√†n b·ªô ƒë·ªãa ƒëi·ªÉm cho dropdown ·ªü ph·∫ßn ti·ªán √≠ch (kh√¥ng ph√¢n trang)
function loadAllDestinationsForDropdown2(province = '') {
    $.ajax({
        url: '{{ route('ajax.post_share_destinations') }}',
        data: { province: province, all: 1 },
        success: function(res) {
            let selectHtml = '<option value="">T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm</option>';
            (res.all_results || []).forEach(function(item) {
                selectHtml += `<option value="${item.id}">${item.text}</option>`;
            });
            $('#destinationSelect2').html(selectHtml);
            $('#destinationSelect2').select2({
                width: '100%',
                placeholder: 'T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm'
            });
        }
    });
}


$('#destinationSelect2').on('change', function() {
    let destinationId = $(this).val();
    if (destinationId) {
        $('#utilityOptionsRow').show();
        $('#createUtilityLink').show(); // Hi·ªán link khi ch·ªçn ƒë·ªãa ƒëi·ªÉm
        $('#facilityDestinationCards').hide().html('');
        renderUtilityCards(destinationId, $('#utilityTypeSelect').val());
        loadAllUtilitiesForDropdown(destinationId, $('#utilityTypeSelect').val());
        $('#utilityCards').show();
        $('#facilityDestinationPagination').hide();
    } else {
        $('#utilityOptionsRow').hide();
        $('#createUtilityLink').hide(); // ·∫®n link khi ch∆∞a ch·ªçn ƒë·ªãa ƒëi·ªÉm
        $('#utilityCards').hide().html('');
        $('#facilityDestinationCards').show();
        $('#facilityDestinationPagination').show();
    }
    $('#destinationPagination').hide();
});

// N·∫øu b·∫°n c√≥ route('page.post_articles', ['id' => 'ID'])
function goToPostArticles(id) {
    window.location.href = '{{ route('post_articles', ['id' => '___ID___']) }}'.replace('___ID___', id);
}

// Dropdown
$('#destinationSelect').on('change', function() {
    let destinationId = $(this).val();
    if (destinationId) goToPostArticles(destinationId);
});

// Th·∫ª
$(document).on('click', '#destinationCards .destination-card', function() {
    let destinationId = $(this).data('id');
    if (destinationId) goToPostArticles(destinationId);
});

// Khi click v√†o th·∫ª ƒë·ªãa ƒëi·ªÉm
$(document).on('click', '#facilityDestinationCards .destination-card', function() {
    let destinationId = $(this).data('id');
    $('#destinationSelect2').val(destinationId).trigger('change');
});

// Khi click v√†o th·∫ª ƒë·ªãa ƒëi·ªÉm
$(document).on('click', '#destinationCards .destination-card', function() {
    let destinationId = $(this).data('id');
    $('#destinationSelect').val(destinationId).trigger('change');
});

$('#utilityTypeSelect').on('change', function() {
    let destinationId = $('#destinationSelect2').val();
    let utilityTypeId = $(this).val();
    renderUtilityCards(destinationId, utilityTypeId);
    // G·ªåI TH√äM D√íNG N√ÄY:
    loadAllUtilitiesForDropdown(destinationId, utilityTypeId);
});

function loadAllUtilitiesForDropdown(destinationId = '', utilityTypeId = '') {
    $.ajax({
        url: '{{ route('ajax.post_share_utilities') }}',
        data: { destination_id: destinationId, utility_type_id: utilityTypeId, all: 1 }, // <-- th√™m all: 1
        success: function(res) {
            let selectHtml = '<option value="">T√¨m ki·∫øm ti·ªán √≠ch</option>';
            (res.all_results || []).forEach(function(item) {
                selectHtml += `<option value="${item.id}">${item.text}</option>`;
            });
            $('#utilitySelect').html(selectHtml);
            $('#utilitySelect').select2({
                width: '100%',
                placeholder: 'T√¨m ki·∫øm ti·ªán √≠ch'
            });
        }
    });
}

// H√†m render th·∫ª ƒë·ªãa ƒëi·ªÉm cho ph·∫ßn ti·ªán √≠ch
window.renderFacilityDestinationCards = function(province = '', page = 1, q = '') {
    $.ajax({
        url: '{{ route('ajax.post_share_destinations') }}',
        data: { province: province, page: page, q: q },
        success: function(res) {
            let html = '';
            let results = res.results || [];
            if (results.length === 0) {
                html = '<div class="destination-card"><p>Kh√¥ng c√≥ ƒë·ªãa ƒëi·ªÉm n√†o.</p></div>';
            } else {
                results.forEach(function(item) {
                    html += `
                    <div class="destination-card" data-id="${item.id}">
                        <div class="card shadow-sm h-100">
                            <img src="${item.image}" class="card-img-top" alt="${item.text}">
                            <div class="card-body">
                                <h5 class="card-title">${item.text}</h5>
                            </div>
                        </div>
                    </div>`;
                });
            }
            $('#facilityDestinationCards').html(html);
            renderFacilityPagination(res.current_page, res.last_page, province, q);
        }
    });
}

function renderFacilityPagination(current, last, province, q) {
    let html = '';
    if (last > 1) {
        html += `<nav class="pagination-nav"><ul class="pagination">`;
        for (let i = 1; i <= last; i++) {
            html += `<li class="page-item${i === current ? ' active' : ''}">
                        <a href="#" class="facility-page-link page-link" data-page="${i}" data-province="${province}" data-q="${q || ''}">${i}</a>
                    </li>`;
        }
        html += `</ul></nav>`;
        $('#facilityDestinationPagination').html(html).show();
    } else {
        $('#facilityDestinationPagination').html('').hide();
    }

    // G√°n s·ª± ki·ªán click
    $('.facility-page-link').off('click').on('click', function(e) {
        e.preventDefault();
        let page = $(this).data('page');
        let province = $(this).data('province');
        let q = $(this).data('q');
        renderFacilityDestinationCards(province, page, q);
    });
}

// H√†m render th·∫ª ti·ªán √≠ch
function renderUtilityCards(destinationId = '', utilityTypeId = '', q = '') {
    $.ajax({
        url: '{{ route('ajax.post_share_utilities') }}',
        data: { destination_id: destinationId, utility_type_id: utilityTypeId, q: q },
        success: function(res) {
            let html = '';
            let results = res.results || [];
            if (results.length === 0) {
                html = '<div class="destination-card"><p>Kh√¥ng c√≥ ti·ªán √≠ch n√†o.</p></div>';
            } else {
                results.forEach(function(item) {
                    // N·∫øu item.image ƒë√£ l√† link ƒë·∫ßy ƒë·ªß th√¨ d√πng lu√¥n, n·∫øu ch·ªâ l√† t√™n file th√¨ n·ªëi storage/utility_image/
                    let imgSrc = item.image
                        ? (item.image.startsWith('http') ? item.image : '/storage/utility_image/' + item.image)
                        : '/storage/utility_image/default_hotel.jpg';
                    html += `
                    <div class="destination-card" data-id="${item.id}" data-type="utility">
                        <div class="card shadow-sm h-100">
                            <img src="${imgSrc}" class="card-img-top" alt="${item.text}">
                            <div class="card-body">
                                <h5 class="card-title">${item.text}</h5>
                            </div>
                        </div>
                    </div>`;
                });
            }
            $('#utilityCards').html(html);
        }
    });
}
// Khi ch·ªçn ti·ªán √≠ch ·ªü dropdown
$('#utilitySelect').on('change', function() {
    let utilityId = $(this).val();
    if (utilityId) {
        window.location.href = '{{ route('post_articles', ['id' => '___ID___', 'postType' => 'utility']) }}'.replace('___ID___', utilityId);
    }
});

// Khi click v√†o th·∫ª ti·ªán √≠ch
$(document).on('click', '#utilityCards .destination-card[data-type="utility"]', function() {
    let utilityId = $(this).data('id');
    if (utilityId) {
        window.location.href = '{{ route('post_articles', ['id' => '___ID___', 'postType' => 'utility']) }}'.replace('___ID___', utilityId);
    }
});
});
</script>
@endsection